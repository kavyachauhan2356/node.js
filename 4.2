-------------------server.js-------------------
const express = require('express');
const app = express();
const PORT = 3000;

// Middleware to parse JSON bodies
app.use(express.json());

// In-memory card collection
let cards = [
  { id: 1, suit: 'Hearts', value: 'Ace' },
  { id: 2, suit: 'Spades', value: 'King' },
  { id: 3, suit: 'Diamonds', value: 'Queen' }
];

let nextId = 4; // Next available ID

// --- GET all cards ---
app.get('/cards', (req, res) => {
  res.status(200).json(cards);
});

// --- GET card by ID ---
app.get('/cards/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const card = cards.find(c => c.id === id);

  if (!card) {
    return res.status(404).json({ error: `Card with ID ${id} not found` });
  }

  res.status(200).json(card);
});

// --- POST new card ---
app.post('/cards', (req, res) => {
  const { suit, value } = req.body;

  if (!suit || !value) {
    return res.status(400).json({ error: 'Both suit and value are required' });
  }

  const newCard = { id: nextId++, suit, value };
  cards.push(newCard);

  res.status(201).json(newCard);
});

// --- DELETE card by ID ---
app.delete('/cards/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const index = cards.findIndex(c => c.id === id);

  if (index === -1) {
    return res.status(404).json({ error: `Card with ID ${id} not found` });
  }

  const removedCard = cards.splice(index, 1)[0];
  res.status(200).json({
    message: `Card with ID ${id} removed`,
    card: removedCard
  });
});

// --- Default root route ---
app.get('/', (req, res) => {
  res.json({ message: 'Welcome to the Playing Card Collection API!' });
});

// --- Start the server ---
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});

------------------------How to Test------------------------
1.Run the server:
node server.js

2.Use Postman or curl to test the following:
* GET all cards
curl http://localhost:3000/cards
✅ Returns:
[
  { "id": 1, "suit": "Hearts", "value": "Ace" },
  { "id": 2, "suit": "Spades", "value": "King" },
  { "id": 3, "suit": "Diamonds", "value": "Queen" }
]

* GET card by ID
curl http://localhost:3000/cards/2
✅ Returns:
{ "id": 2, "suit": "Spades", "value": "King" }

* POST new card
curl -X POST http://localhost:3000/cards \
     -H "Content-Type: application/json" \
     -d '{"suit": "Clubs", "value": "Jack"}'
✅ Returns:
{ "id": 4, "suit": "Clubs", "value": "Jack" }

* DELETE card by ID
curl -X DELETE http://localhost:3000/cards/1
✅ Returns:
json
Copy code
{
  "message": "Card with ID 1 removed",
  "card": { "id": 1, "suit": "Hearts", "value": "Ace" }
}
--------------------------------------------------------------
